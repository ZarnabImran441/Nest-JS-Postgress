{
    "name": "nestjs-boiler-plate-typeorm",
    "version": "0.0.1",
    "description": "",
    "author": "",
    "private": false,
    "license": "UNLICENSED",
    "scripts": {
        "prepare": "husky install",
        "build": "nest build",
        "build:all": "nest build base-library && nest build automations-library && nest build task-management && nest build financial-outlook && nest build automations",
        "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
        "start": "nest start",
        "start:dev": "nest start --watch",
        "start:debug": "nest start --debug --watch",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
        "test": "jest",
        "test:watch": "jest --watch",
        "test:cov": "jest --coverage",
        "test:all": "npm run task-management:test:e2e && npm run financial-outlook:test:e2e",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "seed": "ts-node -r tsconfig-paths/register ./node_modules/typeorm-seeding/dist/cli.js seed",
        "task-management:typeorm": "cross-env NODE_ENV=task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts",
        "task-management:db:init:schema": "cross-env NODE_ENV=task-management npm run seed --- -n ./apps/task-management/database/db-setup/db-setup.config.ts",
        "task-management:db:setup": "cross-env NODE_ENV=task-management npm run task-management:db:init:schema && npm run task-management:typeorm --- migration:run && npm run task-management:seed",
        "task-management:seed": "cross-env NODE_ENV=task-management npm run seed --- -n ./apps/task-management/database/seed/seed.config.ts",
        "task-management:db:migration:create": "cross-env NODE_ENV=task-management npm run typeorm --- migration:create",
        "task-management:db:migration:generate": "cross-env NODE_ENV=task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts migration:generate",
        "task-management:db:migration:show": "cross-env NODE_ENV=task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts migration:show",
        "task-management:db:migration:run": "cross-env NODE_ENV=task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts migration:run",
        "task-management:db:migration:revert": "cross-env NODE_ENV=task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts migration:revert",
        "task-management:start:dev": "cross-env NODE_ENV=task-management npm run start:dev --- task-management",
        "task-management:start:debug": "cross-env NODE_ENV=task-management npm run start:debug  --- task-management",
        "task-management:start:prod": "cross-env NODE_ENV=task-management node dist/apps/task-management/main",
        "task-management:start:test": "cross-env NODE_ENV=test-task-management node dist/apps/task-management/main",
        "task-management:test:init:schema": "cross-env NODE_ENV=test-task-management npm run seed --- -n ./apps/task-management/database/db-setup/db-setup.config.ts",
        "task-management:test:typeorm": "cross-env NODE_ENV=test-task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts",
        "task-management:test:seed": "cross-env NODE_ENV=test-task-management npm run seed --- -n ./apps/task-management/database/seed/seed.config.ts",
        "task-management:test:db:setup": "npm run task-management:test:init:schema && npm run task-management:test:typeorm --- migration:run && npm run task-management:test:seed",
        "task-management:test:db:migration:run": "cross-env NODE_ENV=test-task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts migration:run",
        "task-management:test:db:migration:revert": "cross-env NODE_ENV=test-task-management npm run typeorm --- -d ./apps/task-management/database/orm.config.ts migration:revert",
        "task-management:test:e2e": "cross-env NODE_ENV=test-task-management jest --config ./apps/task-management/test-e2e/jest-e2e.json.ts --forceExit",
        "task-management:test:e2e:cov": "cross-env NODE_ENV=test-task-management npm run task-management:test:e2e -- --coverage",
        "task-management:test:e2e:debug": "cross-env NODE_ENV=test-task-management node --inspect-brk ./node_modules/jest/bin/jest.js --runInBand --testTimeout 500000 --config ./apps/task-management/test-e2e/jest-e2e.json.ts",
        "task-management:test:e2e:log": "cross-env NODE_ENV=test-task-management jest --config ./apps/task-management/test-e2e/jest-e2e.json.ts 2>task-management-test-log.txt",
        "task-management:docker:run": "docker run --env-file .env.task-management -d --restart always --add-host host.docker.internal:host-gateway -p ${SERVICE_PORT}:${SERVICE_PORT} -v ${WEB_APP_PATH}:${WEB_APP_PATH} -v ${EVENT_TEMPLATES_PATH}:${EVENT_TEMPLATES_PATH} --name task-management-${ENVIRONMENT} plexxisinc/task-management:${ENVIRONMENT}.latest",
        "task-management:docker:stop": "docker stop task-management-${ENVIRONMENT} || true && docker container rm task-management-${ENVIRONMENT} || true",
        "task-management:docker:hub:build": "docker build --network=host --file apps/task-management/docker/Dockerfile.hub.build -t task-management-${ENVIRONMENT} .",
        "task-management:docker:hub:tag": "docker tag task-management-${ENVIRONMENT}:latest plexxisinc/task-management:${ENVIRONMENT}.${TAG}",
        "task-management:docker:hub:tag:version": "TAG=${BITBUCKET_BUILD_NUMBER} npm run task-management:docker:hub:tag",
        "task-management:docker:hub:tag:latest": "TAG=latest npm run task-management:docker:hub:tag",
        "task-management:docker:hub:push": "docker push plexxisinc/task-management:${ENVIRONMENT}.${TAG}",
        "task-management:docker:hub:push:version": "TAG=${BITBUCKET_BUILD_NUMBER} npm run task-management:docker:hub:push",
        "task-management:docker:hub:push:latest": "TAG=latest npm run task-management:docker:hub:push",
        "task-management:docker:logs": "docker logs --since \"60s\" task-management-$ENVIRONMENT"
    },
    "dependencies": {
        "@aws-sdk/client-s3": "^3.362.0",
        "@aws-sdk/s3-request-presigner": "^3.362.0",
        "@aws-sdk/types": "^3.428.0",
        "@bull-monitor/express": "^5.4.0",
        "@nestjs/axios": "^3.0.0",
        "@nestjs/bull": "^10.0.0",
        "@nestjs/cache-manager": "^2.1.0",
        "@nestjs/common": "^10.0.0",
        "@nestjs/core": "^10.0.0",
        "@nestjs/event-emitter": "^2.0.2",
        "@nestjs/jwt": "^10.1.0",
        "@nestjs/microservices": "^10.0.4",
        "@nestjs/passport": "^10.0.0",
        "@nestjs/platform-express": "^10.0.0",
        "@nestjs/schedule": "^3.0.1",
        "@nestjs/serve-static": "^4.0.0",
        "@nestjs/swagger": "^7.0.11",
        "@nestjs/terminus": "^10.0.1",
        "@nestjs/typeorm": "^10.0.0",
        "@plexxis/eureka-api": "^0.0.37",
        "@plexxis/notification-api": "^0.0.48",
        "async-mutex": "^0.4.1",
        "axios": "^1.5.1",
        "bull": "^4.12.2",
        "cache-manager": "^5.2.4",
        "cache-manager-redis-store": "^3.0.1",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.14.0",
        "compression": "^1.7.4",
        "date-fns": "^2.30.0",
        "dayjs": "^1.11.10",
        "deep-parse-json": "^1.0.2",
        "dotenv-flow": "^3.2.0",
        "express": "^4.18.2",
        "getenv": "^1.0.0",
        "helmet": "^7.0.0",
        "ioredis": "^5.3.2",
        "jszip": "^3.10.1",
        "jwk-to-pem": "^2.0.5",
        "lodash": "^4.17.21",
        "nest-winston": "^1.9.3",
        "nestjs-request-context": "^3.0.0",
        "node-cron": "^3.0.3",
        "passport": "^0.6.0",
        "passport-custom": "^1.1.1",
        "passport-jwt": "^4.0.1",
        "passport-local": "^1.0.0",
        "prom-client": "^14.2.0",
        "ramda": "^0.30.0",
        "redis": "^4.6.10",
        "reflect-metadata": "^0.1.13",
        "rxjs": "^7.8.1",
        "serve-index": "^1.9.1",
        "sharp": "^0.32.6",
        "static-serve": "^0.0.1",
        "swagger-stats": "^0.99.7",
        "typeorm": "^0.3.17",
        "typeorm-transactional": "^0.4.1"
},
    "devDependencies": {
        "@faker-js/faker": "^8.0.2",
        "@jest-decorated/core": "^0.1.7",
        "@nestjs/cli": "^10.0.0",
        "@nestjs/testing": "^10.0.0",
        "@types/bcrypt": "^5.0.1",
        "@types/cache-manager": "^4.0.2",
        "@types/compression": "^1.7.2",
        "@types/express": "^4.17.17",
        "@types/getenv": "^1.0.0",
        "@types/jest": "^29.5.6",
        "@types/multer": "^1.4.9",
        "@types/node": "^20.3.1",
        "@types/supertest": "^2.0.12",
        "@typescript-eslint/eslint-plugin": "^5.59.11",
        "@typescript-eslint/parser": "^5.59.11",
        "cross-env": "^7.0.3",
        "eslint": "^8.42.0",
        "eslint-config-prettier": "^8.8.0",
        "eslint-plugin-prettier": "^4.2.1",
        "husky": "^8.0.0",
        "jest": "^29.5.0",
        "knex": "^3.0.1",
        "nestjs-jest-decorators": "^0.0.1",
        "pg": "^8.11.3",
        "prettier": "^2.8.8",
        "supertest": "^6.3.3",
        "ts-jest": "^29.1.0",
        "ts-loader": "^9.5.0",
        "ts-node": "^10.9.1",
        "typeorm-seeding": "^1.6.1",
        "typescript": "^5.1.3",
        "webpack": "^5.0.0"
    },
    "overrides": {
        "typeorm-seeding": {
            "typeorm": "^0.3.17"
        }
    },
    "jest": {
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "rootDir": ".",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "moduleNameMapper": {
            "^@lib/base-library(|/.*)$": "<rootDir>/libs/base-library/src/$1",
            "^@lib/automations-library(|/.*)$": "<rootDir>/libs/automations-library/src/$1",
            "^@test-lib/test-base-library(|/.*)$": "<rootDir>/libs/test-base-library/src/$1"
        },
        "roots": [
            "<rootDir>/apps/",
            "<rootDir>/libs/"
        ]
    }
}
